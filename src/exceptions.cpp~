#include "exceptions.hpp"

class k_exception: public std::exception
{
  virtual const char* what() const throw()
  {
    return "k not in [8,32]";
  }
} k_ex;

class s_lt_k_exception: public std::exception
{
  virtual const char* what() const throw()
  {
    return "s is larger than k";
  }
} s_lt_k_ex;

class k_minus_s_even_exception: public std::exception
{
  virtual const char* what() const throw()
  {
    return "k - s should be an even number to create canonical syncmers. Please set s to e.g. k-2, k-4, k-6, ...";
  }
} k_minus_s_even_ex;

class max_seed_length_exception: public std::exception
{
  virtual const char* what() const throw()
  {
    return "maximum seed length (-m <max_dist>) is larger than 255 + k";
  }
} max_seed_length_ex;
